{"version":3,"sources":["Component/NavBar/useStyles.jsx","Component/NavBar/NavBar.jsx","Component/InputFields/useStyles.jsx","Component/InputFields/InputFields.jsx","Component/ChartSection/ChartSection.jsx","Pages/useStyles.jsx","Pages/Home.jsx","Theme/Theme.jsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","alignItems","menuButton","marginRight","spacing","title","NavBar","classes","AppBar","color","position","className","Toolbar","Typography","variant","margin","card1","borderColor","palette","primary","main","borderWidth","card2","secondary","card3","third","InputFields","textField1","textField2","textField3","Grid","container","item","xs","sm","Card","CardContent","start","end","duration","separator","ChartSection","props","useState","data","setData","React","chart","state","setState","useEffect","console","log","FormControl","NativeSelect","value","onChange","event","name","target","inputProps","labels","n1","n2","n3","datasets","label","backgroundColor","b1","b2","b3","options","legend","display","text","responsive","scales","yAxes","ticks","beginAtZero","fill","textInput1","fontSize","textInput2","textInput3","inputProps3","borderBottomColor","Home","name1","name2","name3","card","setCard","e","TextField","id","InputLabelProps","InputProps","Theme","createMuiTheme","App","ThemeProvider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.40d1ffb1.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        alignItems: 'center',\r\n      },\r\n      menuButton: {\r\n        marginRight: theme.spacing(2),\r\n      },\r\n      title: {\r\n        flexGrow: 1,\r\n      },\r\n}));\r\n  \r\nexport default useStyles","import React from 'react';\r\nimport {AppBar, Toolbar, Typography, } from '@material-ui/core'\r\nimport useStyles from './useStyles'\r\n\r\nconst NavBar = () =>{\r\n    const classes = useStyles();\r\n    return (\r\n        <AppBar color=\"textSecondary\" position=\"static\"className={classes.root}>\r\n            <Toolbar>\r\n                <Typography variant=\"h6\" color=\"third\"className={classes.title}>\r\n                Kulots\r\n                </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default NavBar","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        margin: 10\r\n    },\r\n    card1: {\r\n        borderColor:theme.palette.primary.main,\r\n        borderWidth: 5,\r\n        margin: 10\r\n       },\r\n    card2: {\r\n        borderColor:theme.palette.secondary.main,\r\n        borderWidth: 5,\r\n        margin: 10\r\n    },\r\n    card3: {\r\n        borderColor:theme.palette.third,\r\n        borderWidth: 5,\r\n        margin: 10\r\n    }\r\n      \r\n  }));\r\n\r\nexport default useStyles","import React from 'react';\r\nimport {Grid, CardContent, Card} from '@material-ui/core'\r\nimport CountUp from 'react-countup'\r\nimport useStyles from './useStyles'\r\n\r\nconst InputFields = ({textField1, textField2, textField3, card1, card2, card3}) =>{\r\n  \r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <Grid container>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Card variant=\"outlined\"  className={classes.card1}>\r\n                        <CardContent>\r\n                            {textField1}\r\n                        </CardContent>\r\n                        <CardContent>\r\n                            <CountUp\r\n                                start={0}\r\n                                end={card1}\r\n                                duration={3}\r\n                                separator=\",\"\r\n                            />\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={4}>\r\n                    <Card variant=\"outlined\" className={classes.card2}>\r\n                        <CardContent>\r\n                            {textField2}\r\n                        </CardContent>\r\n                        <CardContent>\r\n                            \r\n                            <CountUp\r\n                                start={0}\r\n                                end={card2}\r\n                                duration={3}\r\n                                separator=\",\"\r\n                            />\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={4}>\r\n                    <Card variant=\"outlined\" className={classes.card3}>\r\n                        <CardContent>\r\n                            {textField3}\r\n                        </CardContent>\r\n                        <CardContent>\r\n                            <CountUp\r\n                                start={0}\r\n                                end={card3}\r\n                                duration={3}\r\n                                separator=\",\"\r\n                            />\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputFields","import React, {useState, useEffect} from 'react';\r\nimport {Bar, Line, Doughnut} from 'react-chartjs-2'\r\nimport {FormControl, NativeSelect} from '@material-ui/core'\r\nconst ChartSection = (props) =>{\r\n    const [data, setData] = useState(props)\r\n    const [state, setState] = React.useState({\r\n        chart: '',\r\n      });\r\n    useEffect(() => {\r\n        setData(props);\r\n      }, [props]);\r\n      console.log(state)\r\n    const handleChange = (event) => {\r\n    const name = event.target.name;\r\n    setState({\r\n        ...state,\r\n        [name]: event.target.value,\r\n    });\r\n    };\r\n\r\n    const bar = () =>{\r\n        return(\r\n            <Bar\r\n            data={{\r\n             labels:[data.n1, data.n2, data.n3],\r\n             datasets:[{\r\n                 label: 'Bar Chart',\r\n                 backgroundColor:[\r\n                     'rgba(0,0,255,0.5)',\r\n                     'rgba(0,255, 0,0.5)',\r\n                     'rgba(255,0,0,0.5)'\r\n                 ],\r\n                 data:[data.b1, data.b2, data.b3]\r\n             }]\r\n             }}\r\n             options={{\r\n                 legend: { display: false},\r\n                 title: {display:true, text: `Bar Chart`},\r\n                 responsive: true,\r\n                 scales: {\r\n                     yAxes: [{\r\n                         ticks: {\r\n                             beginAtZero: true\r\n                         }\r\n                     }]\r\n                 }\r\n             }}\r\n         />\r\n        )\r\n    }\r\n\r\n    const line = () =>{\r\n        return (\r\n            <Line\r\n                data={{\r\n                    labels: [data.n1, data.n2, data.n3],\r\n                    datasets:[{\r\n                        data: [data.b1, data.b2, data.b3],\r\n                        label: \"Line Chart\",\r\n                        borderColor:'#3333ff',\r\n                        fill: true,\r\n                    }],\r\n                }}\r\n            />\r\n        )\r\n    }\r\n\r\n    const doughnut = () =>{\r\n        return (\r\n            <Doughnut  data={{\r\n                labels: [data.n1, data.n2, data.n3],\r\n                datasets:[{\r\n                    data: [data.b1, data.b2, data.b3],\r\n                    backgroundColor:[\r\n                        'rgba(0,0,255,0.5)',\r\n                        'rgba(0,255, 0,0.5)',\r\n                        'rgba(255,0,0,0.5)'\r\n                    ],\r\n                    label: \"Line Chart\",\r\n                    borderColor:'#000000',\r\n                    fill: true,\r\n                }],\r\n            }} /> \r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <FormControl>\r\n                <NativeSelect\r\n                    value={state.chart}\r\n                    onChange={handleChange}\r\n                    inputProps={{\r\n                        name: 'chart',\r\n                    }}\r\n                >\r\n                    <option value=\"\">Select a chart</option>\r\n                    <option value={'bar'}>Bar</option>\r\n                    <option value={'line'}>Line</option>\r\n                    <option value={'doughnut'}>Doughnut</option>\r\n                </NativeSelect>\r\n            </FormControl>\r\n            {\r\n                (state.chart === 'bar')\r\n                ? bar()\r\n                : (state.chart === 'line')\r\n                ? line()\r\n                : doughnut()\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChartSection","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    textInput1:{\r\n        color:theme.palette.primary.main,\r\n        fontSize: 12\r\n    },\r\n    textInput2:{\r\n        color:theme.palette.secondary.main,\r\n        fontSize: 12\r\n    },\r\n    textInput3:{\r\n        color:theme.palette.third,\r\n        fontSize: 12\r\n    },\r\n    inputProps3:{\r\n        \"& label.Mui-focused\": {\r\n            color: theme.palette.third\r\n          },\r\n          \"& .MuiInput-underline:after\": {\r\n            borderBottomColor: theme.palette.third\r\n          },\r\n    }\r\n  }));\r\n\r\nexport default useStyles","import React, {useState} from 'react';\r\nimport {NavBar, InputFields, ChartSection} from '../Component'\r\nimport {TextField} from '@material-ui/core'\r\nimport useStyles from './useStyles'\r\n\r\nconst Home = () =>{\r\n    const classes = useStyles();\r\n    const [card, setCard] = useState({\r\n                        name1:\"\", \r\n                        name2:\"\", \r\n                        name3:\"\", \r\n                        card1: \"\", \r\n                        card2: \"\", \r\n                        card3:\"\"})\r\n    \r\n    const onChange = e =>{\r\n        setCard({...card,[e.target.name] : e.target.value});\r\n    }\r\n\r\n    const textField1 = () =>{\r\n        return (\r\n            <div>    \r\n            <TextField \r\n                id=\"standard-basic\" \r\n                label=\"Name\" \r\n                onChange={onChange}\r\n                name=\"name1\"\r\n                value={card.name1}\r\n                InputLabelProps={{\r\n                    className: classes.textInput1,\r\n                }}\r\n                color=\"primary\"\r\n            />            \r\n            <TextField \r\n                id=\"standard-basic\" \r\n                label=\"Value\" \r\n                onChange={onChange}\r\n                name=\"card1\"\r\n                value={card.card1}\r\n                InputLabelProps={{\r\n                    className: classes.textInput1,\r\n                }}\r\n                color=\"primary\"\r\n            />\r\n            </div>\r\n\r\n        )\r\n    }\r\n    const textField2 = () =>{\r\n        return (\r\n            <div>\r\n                <TextField \r\n                    id=\"standard-basic\" \r\n                    label=\"Name\" \r\n                    onChange={onChange}\r\n                    name=\"name2\"\r\n                    value={card.name2}\r\n                    InputLabelProps={{\r\n                        className: classes.textInput2,\r\n                    }}\r\n                    color=\"secondary\"\r\n                />   \r\n                <TextField \r\n                    id=\"standard-basic\" \r\n                    label=\"Value\" \r\n                    onChange={onChange}\r\n                    name=\"card2\"\r\n                    value={card.card2}\r\n                    InputLabelProps={{\r\n                        className: classes.textInput2,\r\n                    }}\r\n                    color=\"secondary\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n    const textField3 = () =>{\r\n        return (\r\n            <div>\r\n                <TextField \r\n                    id=\"standard-basic\" \r\n                    label=\"Name\" \r\n                    onChange={onChange}\r\n                    name=\"name3\"\r\n                    value={card.name3}\r\n                    InputLabelProps={{\r\n                        className: classes.textInput3,\r\n                    }}\r\n                    color=\"#000000\"\r\n                />   \r\n                <TextField \r\n                    id=\"standard-basic\" \r\n                    label=\"Value\" \r\n                    onChange={onChange}\r\n                    name=\"card3\"\r\n                    value={card.card3}\r\n                    InputLabelProps={{\r\n                        className: classes.textInput3,\r\n                    }}\r\n                    InputProps={{\r\n                        className: classes.inputProps3\r\n                    }}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div>\r\n            <NavBar />\r\n            <InputFields \r\n                textField1 = {textField1()}\r\n                textField2 = {textField2()}\r\n                textField3 = {textField3()}\r\n                card1 = {card.card1}\r\n                card2 = {card.card2}\r\n                card3 = {card.card3}\r\n            />\r\n            <ChartSection \r\n                n1={card.name1}\r\n                n2={card.name2}\r\n                n3={card.name3}\r\n                b1 = {card.card1}\r\n                b2 = {card.card2}\r\n                b3 = {card.card3}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import {createMuiTheme} from '@material-ui/core'\r\n\r\nconst Theme = createMuiTheme({\r\n    palette:{\r\n      primary:{\r\n        main:\"rgba(0,0,255,0.5)\"\r\n      },\r\n      secondary:{\r\n        main:\"rgba(0,255, 0,0.5)\"\r\n      },\r\n      third:\"rgba(255,0,0,0.5)\"\r\n    }\r\n  })\r\n\r\nexport default Theme;","import React from 'react';\nimport './App.css';\nimport Home from './Pages/Home'\nimport {ThemeProvider} from \"@material-ui/core/styles\"\nimport Theme from \"./Theme/Theme\"\n\nfunction App() {\n  return (\n    <ThemeProvider theme={Theme}>\n      <div className=\"App\">\n        <Home />\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}